# 온라인 사진첩 서비스 - 인물 인식하여 분류해주는 서비스 PRD

## 1. 프로젝트 개요

### 프로젝트 이름: **온라인 사진첩 서비스**

### 목표:

- 사용자가 사진을 업로드하면 날짜별로 정리되고, 인공지능을 활용해 인물별로 자동 분류되는 온라인 사진첩 서비스 제공
- 단순한 UI이지만 아날로그 감성을 살린 디자인 적용
- MVP 개발에 집중하여 핵심 기능 완성도 확보

---

## 2. 유저 플로우

1. **사진 업로드**:
   - 사진을 드래그 앤 드롭 또는 파일 선택을 통해 업로드
   - 업로드한 날짜 기준으로 사진의 촬영 날짜 자동 기록
2. **사진 정리 및 관리**:
   - 날짜별로 자동 정렬
   - 사용자가 날짜 수정 가능
   - 장소 및 메모 추가 기능 제공
3. **인물 인식 및 분류**:
   - AI를 활용하여 사진 속 인물 식별
   - 동일한 인물을 자동 그룹화하여 제공
   - 사용자가 직접 수정 가능 (이름 변경, 그룹 조정 등)
4. **필터 및 검색 기능**:
   - 인물별 필터링
   - 날짜별 검색
   - 태그 또는 메모 기반 검색
5. **UI/UX**:
   - 종이 사진첩 같은 감성적인 디자인
   - 단순하고 직관적인 인터페이스

---

## 3. 핵심 기능

### ✅ 필수 기능 (MVP)

1. **사진 업로드 및 저장 (로컬 스토리지 활용)**
2. **사진 촬영 날짜 자동 기록 (메타데이터 활용)**
3. **날짜 수정 및 메모 추가 기능**
4. **AI 기반 인물 인식 및 그룹화**
5. **인물별 사진 필터 기능**
6. **단순하고 직관적인 UI 제공**

### 🔄 추가 기능 (MVP 이후 개선)

1. **앨범별 사진 분류 (사용자 정의 그룹화 기능)**
2. **사진 공유 기능 (링크 공유, SNS 업로드 등)**
3. **스마트 태그 추천 (AI 기반 자동 태깅)**
4. **다중 기기 동기화 (모바일, 태블릿 지원 - 클라우드 저장소 필요)**
5. **OCR 기반 텍스트 인식 및 검색 기능**
6. **자동 장소 인식 및 지도 연동**
7. **AWS S3 및 백엔드 DB 도입 검토 (데이터 영속성 개선)**

---

## 4. 기술 스택

### 📌 프론트엔드

- **Next.js (App Router 기반)**: SSR, SEO 최적화
- **ShadCn**: UI 구성
- **SCSS**: 스타일링 및 확장성 고려
- **Zustand**: 상태 관리
- **로컬 스토리지**: 초기 MVP에서는 브라우저 내 저장 활용

### 📌 인공지능 (AI)

- **Face API**: 브라우저 내에서 실행되는 얼굴 인식 API로, 빠르고 간편하게 인물 분류 가능
- **적용 방식**:
  - 클라이언트 측: Face API를 활용하여 사진 업로드 시 얼굴 감지 및 기본 그룹화
  - 브라우저 내에서 즉시 인물 분류 수행하여 서버 부하 없이 빠른 응답 제공
  - 필요 시 사용자 수정 기능을 제공하여 정확도 보완

### 📌 기타

- **SWR**: 데이터 페칭 최적화
- **Vercel**: 초기 MVP 배포 (서버리스 방식 유지)

---

## 5. MVP 기능 개발 이후 추가 개선 사항

1. **UI/UX 고도화**: 아날로그 감성을 살리면서도 현대적인 UI 추가 개선
2. **인물 인식 AI 개선**: Face API에서 TensorFlow.js 기반 모델로 업그레이드하여 인식 정확도 및 속도 최적화 검토
3. **사진 편집 기능 추가**: 기본적인 필터, 크롭, 회전 기능 지원
4. **알림 시스템**: 사진 업로드 및 AI 분석 완료 알림 제공
5. **소셜 기능 강화**: 친구 초대 및 공동 앨범 기능 제공
6. **유료화 모델 검토**: 구독 기반 프리미엄 기능 추가 (고급 AI 분석, 무제한 저장소 등)
7. **AWS S3 및 백엔드 DB 도입 검토**:
   - 사용자 데이터 영속성을 위해 백엔드 스토리지 도입 (예: PostgreSQL, Firebase)
   - 다중 기기 동기화 및 클라우드 저장소 활용 검토
8. **서버 기반 AI 추가 및 모노레포 도입 검토**:
   - FastAPI와 TensorFlow를 활용하여 보다 정밀한 AI 분석 기능 추가 가능
   - AI 기능을 별도의 서비스로 분리하고 모노레포(Turborepo) 적용 가능
   - 클라이언트에서 어려운 고급 인식 기능(예: 유사 얼굴 검색, AI 학습 기반 개선 등) 추가 가능

---

## 6. 결론

MVP 단계에서는 **사진 업로드, 날짜 관리, 인물 인식 및 필터링 기능**에 집중하며, 클라이언트 중심의 로컬 스토리지를 활용하여 간단하게 구현한다. 이후 단계적으로 기능을 확장하여 완성도를 높인다. 장기적으로는 AWS S3 및 백엔드 도입을 통해 **데이터 영속성**을 확보하고, 필요 시 **TensorFlow.js 및 FastAPI 기반 AI 서비스**로 확장하는 방향을 검토한다. 또한, AI 기능을 별도로 운영할 경우 **모노레포 구조를 적용하는 방안**도 고려할 수 있다.

